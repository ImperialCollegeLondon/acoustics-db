(dp1
S'output'
p2
S"<class 'pysqlite2.dbapi2.OperationalError'> ambiguous column name: auth_user.id_skill"
p3
sS'layer'
p4
S'/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\nfrom gluon.serializers import json\nimport itertools\nimport math\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Hello World")\n    return dict(message=T(\'Welcome to web2py!\'))\n\n\ndef player():\n    \n    """\n    Exposes the wavesurfer player, loading a particular audio file \n    and the calls associated with it\n    """\n    \n    if request.vars[\'audio_id\']:\n        record = db.audio(request.vars[\'audio_id\'])\n    else:\n        record = db.audio(1)\n    \n    if record.previous_part:\n        backward_link = A(I(_class=\'glyphicon glyphicon-chevron-left\'),\n                          _href=URL(\'default\',\'player\', args=record.previous_part))\n    else:\n        backward_link = I()\n    \n    if record.next_part:\n        forward_link = A(I(_class=\'glyphicon glyphicon-chevron-right\'),\n                          _href=URL(\'default\',\'player\', args=record.next_part))\n    else:\n        forward_link = I()\n    \n    # get the calls for this audio...\n    rows = db(db.calls.audio_id == record.id).select()\n    \n    # Build the collapsible list items showing each region, region controls,\n    # and any associated ID.\n    \n    \n    # The general information to display on this page is the call, call info and then\n    # each id (if any) and the number of votes and weighted average score for each id. \n    \n    # The call info is available from the row object, and then I\'ve used the\n    # DB backend here to get all the identifications for this audio id and preprocess\n    # the components of the weighting. The SQL is:\n    #\n    # select i.call_id, i.id, t.common_name,  count(s.score), \n    #        sum(s.score * u.id_skill), sum(u.id_skill) \n    #   from audio a join calls c on a.id == c.audio_id \n    #       join identifications i on c.id == i.call_id \n    #       join taxa t on t.id == i.taxon_id \n    #       left outer join scores s on s.identification_id == i.id \n    #       left outer join auth_user u on u.id == s.user_id \n    #   where a.id == 1\n    #   group by i.id;\n    \n    this_audio = db((db.calls.audio_id == record.id) & \n                    (db.identifications.call_id == db.calls.id) &\n                    (db.identifications.taxon_id == db.taxa.id))\n    \n    ident_info = this_audio.select(db.identifications.id,\n                                   db.identifications.call_id,\n                                   db.taxa.ALL,\n                                   db.scores.score.count().with_alias(\'count\'), \n                                   (db.scores.score * db.auth_user.id_skill).sum().with_alias(\'num\'),\n                                   db.auth_user.id_skill.sum().with_alias(\'denom\'),\n                           left = [db.scores.on(db.identifications.id == db.scores.identification_id),\n                                   db.auth_user.on(db.auth_user.id == db.scores.user_id)],\n                           groupby = db.identifications.id,\n                           orderby = db.identifications.call_id)\n    \n    # build that data into a dictionary of identifications by call_id \n    # NB: This groupby relies on DB query above ordering by the key!\n    ident_dict = {k: list(g) for k, g in itertools.groupby(ident_info, lambda x: x.identifications.call_id)}\n    \n    items = []\n    for r in rows:\n        # call header row, showing play and link to call page.\n        region_info = LI(A(SPAN(_class="glyphicon glyphicon-list"),\n                           _class="btn btn-warning btn-xs", _href=URL(\'calls\', vars={\'call_id\': r.id})),\n                         XML(\'&nbsp\'),\n                         TAG.button(SPAN(_class="glyphicon glyphicon-play"),\n                                    _id=\'play_call_\' + str(r.id), _class="btn btn-warning btn-xs"),\n                         XML(\'&nbsp\'),\n                         # B(\'Call \' + str(r.id) + \': \'), \n                         I(\' {} seconds\'.format(str(round(r.end_time - r.start_time, 2)))),\n                           _class=\'list-group-item call_info\',\n                           _onmouseover=\'highlight_call(this)\',\n                           _onmouseout=\'dehighlight_call(this)\',\n                           _id = \'highlight_\' + str(r.id))\n        \n        #  compile identification information for this call\n        if r.id in ident_dict:\n            for c in ident_dict[r.id]:\n                # info to style the average id score bar, which is 114 pixels long\n                # with 7px round caps, so has a 0-100 for showing average scores 1-4\n                mn_score = ((c.num/c.denom)-1) * (100/3)\n                bar_px = 7 + mn_score\n                # stolen code to get a nice RAG scale\n                # http://stackoverflow.com/questions/340209/generate-colors-between-red-and-green-for-a-power-meter\n                red = int(255 * math.sqrt(math.cos(mn_score * math.pi / 200)))\n                green = int(255 * math.sqrt(math.sin(mn_score * math.pi / 200)))\n                this_style = "width: {}px; background: rgb({},{},0);".format(bar_px, red, green)\n                call_info =  LI(DIV(DIV(c.taxa.common_name, \' (\',\n                                        I(c.taxa.genus, \' \', c.taxa.species), \')\',\n                                        _class=\'col-sm-6\'),\n                                    DIV(DIV(DIV(_class="progress-bar progress-bar-success",\n                                                _role="progressbar", _style=this_style),\n                                            _class="progress id_quality"),\n                                        _class="col-sm-4 id_qual_div"),\n                                    DIV(SPAN(c.count, _class="badge"), _class="col-sm-2"),\n                                    _class=\'row\'),\n                                _class=\'list-group-item small call_id\')\n                region_info = CAT(region_info, call_info)\n        else:\n            no_id = LI("No identification proposed", _class=\'list-group-item small call_id\')\n            region_info = CAT(region_info, no_id)\n        \n        items.append(DIV(region_info, _class=\'collapse\', _id=\'call\' + str(r.id)))\n    \n    list_group = DIV(*items, _class="panel list-group")\n    # list_group = DIV(DIV(DIV(*items, _class="panel list-group"), _class=\'accordion-group\'), _id=\'calls\')\n    \n    # ... update names to match the wavesurfer_js region properties\n    # - start is a reserved word in the web2py framework so can\'t be used directly\n    # - add an attribute to identify new regions from existing ones.\n    for r in rows:\n        r.update({\'start\': r[\'start_time\'], \'end\': r[\'end_time\'], \'attributes\':{\'type\': \'fixed\'}})\n    \n    # serialise as JSON to pass to the javascript that loads the regions on the wavesurfer\n    rows = json(rows)\n    \n    # pass summary data of identifications to allow javascript \n    # to load ids for a selected call on the client side\n    \n    return dict(record=record, backward_link=backward_link, list_group=list_group,\n                forward_link=forward_link, rows=rows)\n\n@auth.requires_login()\ndef create_call():\n    \n    # get the variables from the posted variables\n    \n    db.calls.insert(audio_id = request.vars[\'audio_id\'],\n                    start_time = request.vars[\'start\'],\n                    end_time = request.vars[\'end\'],\n                    created_by = auth.user.id,\n                    created_on = datetime.datetime.now())\n    \n    redirect(URL(\'player\', vars={\'audio_id\':request.vars[\'audio_id\']}))\n\ndef _seconds_to_time(val):\n    \n    m = int(val // 60)\n    s = int(val % 60)\n    ts = int(val % 1 * 10)\n    \n    return \'{}:{}.{}\'.format(m,s,ts)\n\n\ndef calls():\n    \n    # retrieve the call id and audio\n    if request.vars[\'call_id\']:\n    \n        record = db.calls(request.vars[\'call_id\'])\n        audio = db.audio(record.audio_id)\n    \n    else:\n        # TODO - where to redirect to\n        redirect(\'index\')\n    \n    # get associated identification details\n    this_call = db((db.calls.id == record.id) & \n                   (db.identifications.call_id == db.calls.id) &\n                   (db.identifications.taxon_id == db.taxa.id))\n    \n    ident_rows = this_call.select(db.identifications.id,\n                                  db.taxa.common_name,\n                                  db.taxa.genus,\n                                  db.taxa.species,\n                                  db.taxa.subspecies,\n                                  db.scores.score, \n                                  db.auth_user.id_skill,\n                                  db.auth_user.first_name,\n                                  db.auth_user.last_name,\n                           left = [db.scores.on(db.identifications.id == db.scores.identification_id),\n                                   db.auth_user.on(db.auth_user.id == db.scores.user_id),\n                                   db.auth_user.on(db.auth_user.id == db.identifications.user_id)],\n                           orderby = db.identifications.id)\n    \n    ident_info = ident_rows\n    print ident_info\n    \n    return dict(record=record, audio=audio, ident_info=ident_info)\n\ndef recordings():\n    \n    links = [dict(header = \'\', \n                  body = lambda row: A(SPAN(\'\',_class="glyphicon glyphicon-eye-open"),\n                                       XML(\'&nbsp;\'),\n                                       SPAN(\'View\', _class="buttontext button"),\n                                       _class="btn btn-default", \n                                       _href=URL("player", vars={\'audio_id\':row.id}),\n                                       _style=\'padding: 3px 5px 3px 5px;\'))]     \n    \n    form = SQLFORM.grid(db.audio,\n                        fields=[db.audio.filename, db.audio.start_datetime, db.audio.length_seconds],\n                        csv=False,\n                        create=False,\n                        editable=False,\n                        details=False,\n                        links=links)\n    \n    return dict(form=form)\n\ndef taxa():\n    \n    form = SQLFORM.grid(db.taxa,\n                        fields = [db.taxa.common_name, db.taxa.genus, \n                                  db.taxa.species, db.taxa.subspecies],\n                        csv=False,\n                        create=False,\n                        editable=False,\n                        details=False)\n    \n    return dict(form=form)\n\ndef taxon():\n    \n    if request.vars[\'taxon_id\']:\n        record = db.taxa(request.vars[\'taxon_id\'])\n    else:\n        record = db.taxa(1)\n    \n    \n    form = SQLFORM(db.taxa, record=record, readonly=True)\n    \n    return dict(form=form)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(calls)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'pysqlite2.dbapi2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of OperationalError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of OperationalError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of OperationalError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of OperationalError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of OperationalError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of OperationalError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of OperationalError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of OperationalError object>'
p35
sS'__class__'
p36
S"<class 'pysqlite2.dbapi2.OperationalError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of OperationalError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of OperationalError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of OperationalError object>"
p45
sS'args'
p46
S"('ambiguous column name: auth_user.id_skill',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of OperationalError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of OperationalError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of OperationalError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of OperationalError object>"
p57
ssS'evalue'
p58
S'ambiguous column name: auth_user.id_skill'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\xe9Y\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>Rainforest_Rhythm</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-d24ef550-e57b-4862-9e1f-3978c4fff986<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_rainforest_rhythm</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_rainforest_rhythm=127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b; session_id_admin=127.0.0.1-d24ef550-e57b-4862-9e1f-3978c4fff986</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/Rainforest_Rhythm/player?audio_id=1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/Rainforest_Rhythm/calls</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>call_id=1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>54464</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>lb-dormelap.sp.ic.ac.uk</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/RainforestRhythmn/&#x27;, &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/admin/&#x27;, &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/&#x27;, &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/SAFE_web/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1043a24d0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;129.31.3.3&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;lb-dormelap.sp.ic.ac.uk&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_rainforest_rhythm=127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b; session_id_admin=127.0.0.1-d24ef550-e57b-4862-9e1f-3978c4fff986</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/Rainforest_Rhythm/player?audio_id=1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>129.31.3.3</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>lb-dormelap.sp.ic.ac.uk</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/Rainforest_Rhythm/calls</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>call_id=1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>54464</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/Rainforest_Rhythm/default/calls?call_id=1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>lb-dormelap.sp.ic.ac.uk</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_original_uri</td><td style="vertical-align:top;">:</td><td><div>/Rainforest_Rhythm/calls?call_id=1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.13.2-stable+timestamp.2015.12.18.11.00.46</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1002971e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10430c258&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x1103255d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1002971e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10430c258&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x1103255d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>calls</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/RainforestRhythmn/&#x27;, &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/admin/&#x27;, &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/&#x27;, &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/SAFE_web/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1043a24d0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;129.31.3.3&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;lb-dormelap.sp.ic.ac.uk&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>129.31.3.3</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>lb-dormelap.sp.ic.ac.uk</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.13.2-stable+timestamp.2015.12.18.11.00.46</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 1, 27, 13, 43, 11, 473853)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/Rainforest_Rhythm/calls</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 1, 27, 13, 43, 11, 473860)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x10edbee90&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x1102cb3b0, file "/Use...ainforest_Rhythm/controllers/default.py", line 4>'
p73
ssS'lnum'
p74
I227
sS'lines'
p75
(dp76
I224
S'            ccode = code'
p77
sI225
S'        else:'
p78
sI226
S'            ccode = compile2(code, layer)'
p79
sI227
S'        exec ccode in environment'
p80
sI228
S'    except HTTP:'
p81
sI229
S'        raise'
p82
sI230
S'    except RestrictedError:'
p83
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p84
sI222
S'    try:'
p85
sI223
S'        if isinstance(code, types.CodeType):'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...vice()\\n\\n\\n\\nresponse._vars=response._caller(calls)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/controllers/default.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/controllers/default.py'
p92
sg68
(dp93
sg74
I299
sg75
(dp94
I288
S'def call():'
p95
sI289
S'    """'
p96
sI290
S'    exposes services. for example:'
p97
sI291
S'    http://..../[app]/default/call/jsonrpc'
p98
sI292
S'    decorate with @services.jsonrpc the functions to expose'
p99
sI293
S'    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv'
p100
sI294
S'    """'
p101
sI295
S'    return service()'
p102
sI296
S''
sI297
S''
ssg87
S'()'
p103
sg89
S'<module>'
p104
sa(dp105
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/globals.py'
p106
sg68
(dp107
S'self'
p108
S'undefined'
p109
sS'f'
S'<function calls>'
p110
ssg74
I412
sg75
(dp111
I416
S"        self.generic_patterns = ['*']"
p112
sI407
S"        self.flash = ''            # used by the default view layout"
p113
sI408
S'        self.meta = Storage()      # used by web2py_ajax.html'
p114
sI409
S'        self.menu = []             # used by the default view layout'
p115
sI410
S'        self.files = []            # used by web2py_ajax.html'
p116
sI411
S'        self._vars = None'
p117
sI412
S'        self._caller = lambda f: f()'
p118
sI413
S'        self._view_environment = None'
p119
sI414
S'        self._custom_commit = None'
p120
sI415
S'        self._custom_rollback = None'
p121
ssg87
S'(f=<function calls>)'
p122
sg89
S'<lambda>'
p123
sa(dp124
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/controllers/default.py'
p125
sg68
(dp126
S'orderby'
p127
g109
sS'global db'
p128
S'<DAL uri="sqlite://storage.sqlite">'
p129
sS'db.identifications'
p130
S'<Table identifications (id,call_id,user_id,taxon_id,created_on)>'
p131
sS'db.identifications.id'
p132
S'<pydal.objects.Field object>'
p133
ssg74
I208
sg75
(dp134
I203
S'                                  db.auth_user.first_name,'
p135
sI204
S'                                  db.auth_user.last_name,'
p136
sI205
S'                           left = [db.scores.on(db.identifications.id == db.scores.identification_id),'
p137
sI206
S'                                   db.auth_user.on(db.auth_user.id == db.scores.user_id),'
p138
sI207
S'                                   db.auth_user.on(db.auth_user.id == db.identifications.user_id)],'
p139
sI208
S'                           orderby = db.identifications.id)'
p140
sI209
S''
sI210
S'    ident_info = ident_rows'
p141
sI211
S'    print ident_info'
p142
sI212
S''
ssg87
S'()'
p143
sg89
S'calls'
p144
sa(dp145
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/objects.py'
p146
sg68
(dp147
S'self.query'
p148
S'<Query (((calls.id = 1) AND (identifications.cal...s.id)) AND (identifications.taxon_id = taxa.id))>'
p149
sS'adapter.select'
p150
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p151
sS'fields'
p152
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p153
sS'adapter'
p154
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p155
sS'attributes'
p156
S"{'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>}"
p157
sS'self'
p158
S'<Set (((calls.id = 1) AND (identifications.call_...s.id)) AND (identifications.taxon_id = taxa.id))>'
p159
ssg74
I2022
sg75
(dp160
I2017
S"                                    attributes.get('join',None),"
p161
sI2018
S"                                    attributes.get('left',None),"
p162
sI2019
S"                                    attributes.get('orderby',None),"
p163
sI2020
S"                                    attributes.get('groupby',None))"
p164
sI2021
S'        fields = adapter.expand_all(fields, tablenames)'
p165
sI2022
S'        return adapter.select(self.query,fields,attributes)'
p166
sI2023
S''
sI2024
S'    def iterselect(self, *fields, **attributes):'
p167
sI2025
S'        adapter = self.db._adapter'
p168
sI2026
S'        tablenames = adapter.tables(self.query,'
p169
ssg87
S"(self=<Set (((calls.id = 1) AND (identifications.call_...s.id)) AND (identifications.taxon_id = taxa.id))>, *fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], **attributes={'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>})"
p170
sg89
S'select'
p171
sa(dp172
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/sqlite.py'
p173
sg68
(dp174
S'fields'
p175
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p176
sS'self'
p177
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p178
sS').select'
p179
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p180
sS'attributes'
p181
S"{'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>}"
p182
sS'global SQLiteAdapter'
p183
S"<class 'pydal.adapters.sqlite.SQLiteAdapter'>"
p184
sS'query'
p185
S'<Query (((calls.id = 1) AND (identifications.cal...s.id)) AND (identifications.taxon_id = taxa.id))>'
p186
sS'builtinsuper'
p187
S"<type 'super'>"
p188
ssg74
I124
sg75
(dp189
I128
S"    'Windows':'mod_spatialite.dll',"
p190
sI119
S'        Note that the entire database, rather than one record, is locked'
p191
sI120
S'        (it will be locked eventually anyway by the following UPDATE).'
p192
sI121
S'        """'
p193
sI122
S"        if attributes.get('for_update', False) and not 'cache' in attributes:"
p194
sI123
S"            self.execute('BEGIN IMMEDIATE TRANSACTION;')"
p195
sI124
S'        return super(SQLiteAdapter, self).select(query, fields, attributes)'
p196
sI125
S''
sI126
S''
sI127
S'SPATIALLIBS = {'
p197
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (((calls.id = 1) AND (identifications.cal...s.id)) AND (identifications.taxon_id = taxa.id))>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>})"
p198
sg89
g171
sa(dp199
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p200
sg68
(dp201
S'fields'
p202
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p203
sS'self'
p204
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p205
sS'attributes'
p206
S"{'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>}"
p207
sS'self._select_aux'
p208
S'<bound method SQLiteAdapter._select_aux of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p209
sS'sql'
p210
S"'SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;'"
p211
ssg74
I1293
sg75
(dp212
I1288
S'            return cache_model('
p213
sI1289
S'                key,'
p214
sI1290
S'                lambda self=self,args=args:self._select_aux(*args),'
p215
sI1291
S'                time_expire)'
p216
sI1292
S'        else:'
p217
sI1293
S'            return self._select_aux(sql,fields,attributes)'
p218
sI1294
S''
sI1295
S'    def iterselect(self, query, fields, attributes):'
p219
sI1296
S'        sql = self._select(query, fields, attributes)'
p220
sI1297
S"        cacheable = attributes.get('cacheable', False)"
p221
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (((calls.id = 1) AND (identifications.cal...s.id)) AND (identifications.taxon_id = taxa.id))>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>})"
p222
sg89
g171
sa(dp223
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p224
sg68
(dp225
S'self'
p226
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p227
sS'self.execute'
p228
S'<bound method SQLiteAdapter.execute of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p229
sS'sql'
p230
S"'SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;'"
p231
ssg74
I1250
sg75
(dp232
I1248
S"        cache = args_get('cache',None)"
p233
sI1249
S'        if not cache:'
p234
sI1250
S'            self.execute(sql)'
p235
sI1251
S'            rows = self._fetchall()'
p236
sI1252
S'        else:'
p237
sI1253
S'            if isinstance(cache, dict):'
p238
sI1254
S"                cache_model = cache['model']"
p239
sI1245
S''
sI1246
S'    def _select_aux(self, sql, fields, attributes):'
p240
sI1247
S'        args_get = attributes.get'
p241
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, sql='SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;', fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={'left': [<pydal.objects.Expression object>, <pydal.objects.Expression object>, <pydal.objects.Expression object>], 'orderby': <pydal.objects.Field object>})"
p242
sg89
S'_select_aux'
p243
sa(dp244
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p245
sg68
(dp246
S'a'
S"('SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;',)"
p247
sS'self'
p248
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p249
sS'b'
g21
sS'self.log_execute'
p250
S'<bound method SQLiteAdapter.log_execute of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p251
ssg74
I1385
sg75
(dp252
I1380
S'        self.db._timings.append((command,time.time()-t0))'
p253
sI1381
S'        del self.db._timings[:-TIMINGSSIZE]'
p254
sI1382
S'        return ret'
p255
sI1383
S''
sI1384
S'    def execute(self, *a, **b):'
p256
sI1385
S'        return self.log_execute(*a, **b)'
p257
sI1386
S''
sI1387
S'    def execute_test_query(self):'
p258
sI1388
S'        return self.execute(self.test_query)'
p259
sI1389
S''
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, *a=('SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;',), **b={})"
p260
sg89
S'execute'
p261
sa(dp262
g66
S'/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py'
p263
sg68
(dp264
S'a'
S"('SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;',)"
p265
sS'b'
g21
sS'self'
p266
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p267
sS'ret'
p268
g109
sS'command'
p269
S"'SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;'"
p270
sS'self.get_cursor'
p271
S'<bound method SQLiteAdapter.get_cursor of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p272
sS').execute'
p273
g109
ssg74
I1379
sg75
(dp274
I1376
S"            self.db.logger.debug('SQL: %s' % command)"
p275
sI1377
S'        self.db._lastsql = command'
p276
sI1378
S'        t0 = time.time()'
p277
sI1379
S'        ret = self.get_cursor().execute(command, *a[1:], **b)'
p278
sI1380
S'        self.db._timings.append((command,time.time()-t0))'
p279
sI1381
S'        del self.db._timings[:-TIMINGSSIZE]'
p280
sI1382
S'        return ret'
p281
sI1383
S''
sI1374
S'            command = self.filter_sql_command(command)'
p282
sI1375
S'        if self.db._debug:'
p283
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, *a=('SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;',), **b={})"
p284
sg89
S'log_execute'
p285
sasS'pyver'
p286
S'Python 2.7.11: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python (prefix: /Library/Frameworks/Python.framework/Versions/2.7)'
p287
sS'session'
p288
g61
(S's\xef\x08\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>ddcb258d-2d8c-43d4-b99f-bb0c5e87e3bf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 1, 27, 13, 43, 11, 473853)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>d.orme@imperial.ac.uk</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>David</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id_skill</td><td style="vertical-align:top;">:</td><td><div>2.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Orme</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp289
sS'etype'
p290
S"<class 'pysqlite2.dbapi2.OperationalError'>"
p291
sS'date'
p292
S'Fri Jan 27 13:43:11 2017'
p293
sS'response'
p294
g61
(S's\xd0\x1d\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x1144821b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_rainforest_rhythm</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand"><b>Rainforest Rhythm</b></a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/Rainforest_Rhythm</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/calls/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_rainforest_rhythm</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/sessions/0a3/1bf/127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b&#x27;, mode &#x27;rb+&#x27; at 0x10f098390&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/sessions/127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>b478717218e5a14fd77b6359a173de7f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bd78f6dd-bd3d-4c66-ad11-5c1aa445237b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_rainforest_rhythm</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>Rainforest_Rhythm</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Rainforest Rhythm</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/calls.html</div></td></tr></table></div>'
tRp295
sS'locals'
p296
(dp297
S'a'
S"('SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;',)"
p298
sS'self'
p299
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p300
sS'b'
g21
sS'command'
p301
S"'SELECT  identifications.id, taxa.common_name, ta...taxon_id = taxa.id)) ORDER BY identifications.id;'"
p302
sS't0'
p303
S'1485524591.492572'
p304
sssS'traceback'
p305
S'Traceback (most recent call last):\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/controllers/default.py", line 299, in <module>\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/applications/Rainforest_Rhythm/controllers/default.py", line 208, in calls\n    orderby = db.identifications.id)\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/objects.py", line 2022, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 124, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1293, in select\n    return self._select_aux(sql,fields,attributes)\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1250, in _select_aux\n    self.execute(sql)\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1385, in execute\n    return self.log_execute(*a, **b)\n  File "/Users/dorme/Research/SAFE/Web2Py/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1379, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\nOperationalError: ambiguous column name: auth_user.id_skill\n'
p306
s.